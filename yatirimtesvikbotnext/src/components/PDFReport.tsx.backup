import React from 'react';
import { Document, Page, Text, View, StyleSheet, pdf } from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: {
    backgroundColor: '#fff',
  fontFamily: 'Helvetica',
    padding: 30,
    fontSize: 12,
    color: '#22223b',
    minHeight: '100%',
  },
  headerPage1: {
    marginBottom: 20,
    textAlign: 'center',
  },
  mainTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 2,
    color: '#1e293b',
  },
  subtitle: {
    fontSize: 12,
    color: '#475569',
    marginBottom: 8,
  },
  reportInfo: {
    border: '1px solid #3b82f6',
    borderRadius: 6,
    padding: 12,
    marginBottom: 14,
  },
  reportInfoRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 4,
  },
  reportInfoText: {
    fontSize: 10,
    color: '#1e40af',
    fontWeight: 'bold',
  },
  infoCard: {
    border: '1px solid #cbd5e1',
    borderRadius: 8,
    padding: 14,
    marginBottom: 14,
  },
  cardHeader: {
    marginBottom: 8,
    textAlign: 'left',
  },
  cardTitle: {
    fontSize: 13,
    fontWeight: 'bold',
    color: '#1e293b',
  },
  row: {
    flexDirection: 'row',
    marginBottom: 5,
    alignItems: 'center',
  },
  label: {
    fontSize: 10,
    color: '#334155',
    width: 90,
    fontWeight: 'bold',
  },
  value: {
    fontSize: 10,
    color: '#0f172a',
    flex: 1,
  },
  descriptionBox: {
    border: '1px solid #cbd5e1',
    borderRadius: 6,
    padding: 10,
    marginTop: 8,
  },
  descriptionText: {
    fontSize: 9,
    color: '#475569',
    lineHeight: 1.4,
  },
  statusContainer: {
    marginTop: 8,
    marginBottom: 8,
  },
  statusRow: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    marginBottom: 6,
    gap: 8,
  },
  statusLabel: {
    fontSize: 10,
    color: '#475569',
    flex: 1,
  },
  statusYes: {
    color: '#166534',
    fontSize: 9,
    fontWeight: 'bold',
    textAlign: 'center',
    width: 50,
  },
  statusNo: {
    color: '#dc2626',
    fontSize: 9,
    fontWeight: 'bold',
    textAlign: 'center',
    width: 50,
  },
  headerPage2: {
    marginBottom: 18,
    textAlign: 'center',
  },
  supportCard: {
    border: '1px solid #f59e0b',
    borderRadius: 8,
    padding: 14,
    marginBottom: 14,
  },
  supportHeader: {
    marginBottom: 8,
    textAlign: 'left',
  },
  supportRow: {
    flexDirection: 'row',
    marginBottom: 5,
    alignItems: 'center',
  },
  supportLabel: {
    fontSize: 10,
    fontWeight: 'bold',
    color: '#92400e',
    width: 100,
  },
  supportValue: {
    fontSize: 10,
    color: '#b45309',
    flex: 1,
    fontWeight: 'bold',
  },
  supportElementsCard: {
    border: '1px solid #9333ea',
    borderRadius: 8,
    padding: 14,
  },
  supportElementsHeader: {
    marginBottom: 8,
    textAlign: 'left',
  },
  supportElementRow: {
    flexDirection: 'row',
    marginBottom: 4,
    alignItems: 'center',
  },
  supportElementLabel: {
    fontSize: 9,
    color: '#7c3aed',
    width: 120,
    fontWeight: 'bold',
  },
  supportElementValue: {
    fontSize: 9,
    color: '#6b21a8',
    flex: 1,
  },
  footer: {
    position: 'absolute',
    bottom: 20,
    left: 30,
    right: 30,
    textAlign: 'center',
  },
  footerText: {
    fontSize: 8,
    color: '#6b7280',
    marginBottom: 2,
  },
  pageNumber: {
    position: 'absolute',
    bottom: 10,
    right: 30,
    fontSize: 10,
    color: '#6b7280',
  },
});

interface PDFReportProps {
  selectedIl: string;
  selectedIlce: string;
  naceValue: any;
  osb: string;
  isHedefYatirim: boolean;
  isYuksekTeknoloji: boolean;
  isOrtaYuksekTeknoloji: boolean;
  isOncelikliYatirim: boolean;
  destekBolgesi: number | null;
  asgariTutar: string;
  destekUnsurlari: Array<{ ad: string; deger: string }>;
}

const PDFReport: React.FC<PDFReportProps> = ({
  selectedIl,
  selectedIlce,
  naceValue,
  osb,
  isHedefYatirim,
  isYuksekTeknoloji,
  isOrtaYuksekTeknoloji,
  isOncelikliYatirim,
  destekBolgesi,
  asgariTutar,
  destekUnsurlari,
}) => {
  const now = new Date();
  const tarih = now.toLocaleDateString('tr-TR');
  const saat = now.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' });
  const raporNo = `YTR-${Date.now().toString().slice(-6)}`;

  return (
    <Document>
      {/* SAYFA 1 - √ñZET Bƒ∞LGƒ∞LER */}
      <Page size="A4" style={styles.page}>
        
        {/* Header */}
        <View style={styles.headerPage1}>
          <Text style={styles.mainTitle}>Yatƒ±rƒ±m te≈üvik robotu</Text>
          <Text style={styles.subtitle}>Profesyonel yatƒ±rƒ±m te≈üvik analiz raporu</Text>
        </View>

        {/* Rapor Bilgileri */}
        <View style={styles.reportInfo}>
          <View style={styles.reportInfoRow}>
            <Text style={styles.reportInfoText}>Rapor Tarihi: {tarih} {saat}</Text>
            <Text style={styles.reportInfoText}>Rapor No: {raporNo}</Text>
          </View>
          <View style={styles.reportInfoRow}>
            <Text style={styles.reportInfoText}>Analiz T√ºr√º: Yatƒ±rƒ±m Te≈üvik Uygunluk</Text>
            <Text style={styles.reportInfoText}>Durum: Tamamlandƒ± ‚úì</Text>
          </View>
        </View>

        {/* Se√ßilen Bilgiler */}
        <View style={styles.infoCard}>
          <View style={styles.cardHeader}>
            <Text style={styles.cardTitle}>üìç Se√ßilen lokasyon ve faaliyet</Text>
          </View>
          
          <View style={styles.row}>
            <Text style={styles.label}>ƒ∞l:</Text>
            <Text style={styles.value}>{selectedIl}</Text>
          </View>
          
          <View style={styles.row}>
            <Text style={styles.label}>ƒ∞l√ße:</Text>
            <Text style={styles.value}>{selectedIlce}</Text>
          </View>
          
          <View style={styles.row}>
            <Text style={styles.label}>NACE Kodu:</Text>
            <Text style={styles.value}>{naceValue?.kod}</Text>
          </View>
          
          <View style={styles.row}>
            <Text style={styles.label}>OSB/End√ºstri:</Text>
            <Text style={styles.value}>{osb === 'evet' ? 'Evet' : 'Hayƒ±r'}</Text>
          </View>
          
          <View style={styles.descriptionBox}>
            <Text style={styles.descriptionText}>
              <Text style={{fontWeight: 'bold'}}>Faaliyet Tanƒ±mƒ±: </Text>
              {naceValue?.tanim}
            </Text>
          </View>
        </View>

        {/* Yatƒ±rƒ±m √ñzellikleri */}
        <View style={styles.infoCard}>
          <View style={styles.cardHeader}>
            <Text style={styles.cardTitle}>‚≠ê Yatƒ±rƒ±m √∂zellikleri ve uygunluk</Text>
          </View>
          
          <View style={styles.statusContainer}>
            <View style={styles.statusRow}>
              <Text style={styles.statusLabel}>Hedef yatƒ±rƒ±m kapsamƒ±nda mƒ±?</Text>
              <Text style={isHedefYatirim ? styles.statusYes : styles.statusNo}>
                {isHedefYatirim ? 'Evet' : 'Hayƒ±r'}
              </Text>
            </View>
            
            <View style={styles.statusRow}>
              <Text style={styles.statusLabel}>Y√ºksek teknoloji listesinde mi?</Text>
              <Text style={isYuksekTeknoloji ? styles.statusYes : styles.statusNo}>
                {isYuksekTeknoloji ? 'Evet' : 'Hayƒ±r'}
              </Text>
            </View>
            
            <View style={styles.statusRow}>
              <Text style={styles.statusLabel}>Orta-y√ºksek teknoloji listesinde mi?</Text>
              <Text style={isOrtaYuksekTeknoloji ? styles.statusYes : styles.statusNo}>
                {isOrtaYuksekTeknoloji ? 'Evet' : 'Hayƒ±r'}
              </Text>
            </View>
            
            <View style={styles.statusRow}>
              <Text style={styles.statusLabel}>√ñncelikli yatƒ±rƒ±m konusu mu?</Text>
              <Text style={isOncelikliYatirim ? styles.statusYes : styles.statusNo}>
                {isOncelikliYatirim ? 'Evet' : 'Hayƒ±r'}
              </Text>
            </View>
          </View>
        </View>

        <Text style={styles.pageNumber}>Sayfa 1/2</Text>
        
        {/* Footer */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            Bu rapor Yatƒ±rƒ±m Te≈üvik Robotu tarafƒ±ndan otomatik olarak olu≈üturulmu≈ütur.
          </Text>
        </View>
      </Page>

      {/* SAYFA 2 - DETAY Bƒ∞LGƒ∞LER */}
      <Page size="A4" style={styles.page}>
        
        {/* Header Sayfa 2 */}
        <View style={styles.headerPage2}>
          <Text style={styles.mainTitle}>Destek bilgileri ve unsurlarƒ±</Text>
          <Text style={styles.subtitle}>Detaylƒ± analiz raporu - {selectedIl}</Text>
        </View>

        {/* Destek Bilgileri */}
        <View style={styles.supportCard}>
          <View style={styles.supportHeader}>
            <Text style={styles.cardTitle}>üéØ Destek bilgileri</Text>
          </View>
          
          <View style={styles.supportRow}>
            <Text style={styles.supportLabel}>Destek B√∂lgesi:</Text>
            <Text style={styles.supportValue}>{destekBolgesi || '-'}. B√∂lge</Text>
          </View>
          
          <View style={styles.supportRow}>
            <Text style={styles.supportLabel}>Asgari Tutar:</Text>
            <Text style={styles.supportValue}>{asgariTutar}</Text>
          </View>
        </View>

        {/* Destek Unsurlarƒ± */}
        <View style={styles.supportElementsCard}>
          <View style={styles.supportElementsHeader}>
            <Text style={styles.cardTitle}>üìã Destek unsurlarƒ± ({destekUnsurlari.length} adet)</Text>
          </View>
          
          {destekUnsurlari.slice(0, 12).map((destek, index) => (
            <View key={index} style={styles.supportElementRow}>
              <Text style={styles.supportElementLabel}>{destek.ad}:</Text>
              <Text style={styles.supportElementValue}>{destek.deger}</Text>
            </View>
          ))}
          
          {destekUnsurlari.length > 12 && (
            <View style={styles.descriptionBox}>
              <Text style={styles.descriptionText}>
                ... ve {destekUnsurlari.length - 12} destek unsuru daha. 
                T√ºm detaylar i√ßin web aray√ºz√ºn√º kullanƒ±nƒ±z.
              </Text>
            </View>
          )}
        </View>

        <Text style={styles.pageNumber}>Sayfa 2/2</Text>
        
        {/* Footer */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            Detaylƒ± bilgi ve g√ºncel veriler i√ßin resmi kaynaklara ba≈üvurunuz.
          </Text>
        </View>
      </Page>
    </Document>
  );
};

export default PDFReport;

// PDF olu≈üturma ve indirme fonksiyonu
export const generateAndDownloadPDF = async (props: PDFReportProps) => {
  try {
    console.log('PDF olu≈üturma ba≈ülƒ±yor...', props);
    
    const blob = await pdf(<PDFReport {...props} />).toBlob();
    console.log('PDF blob olu≈üturuldu:', blob);
    
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `yatirim-tesvik-raporu-${props.selectedIl}-${props.naceValue?.kod}-${new Date().toLocaleDateString('tr-TR').replace(/\./g, '-')}.pdf`;
    
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    console.log('PDF ba≈üarƒ±yla indirildi!');
  } catch (error) {
    console.error('PDF olu≈üturma/indirme hatasƒ±:', error);
    throw new Error(`PDF olu≈üturulamadƒ±: ${(error as Error).message}`);
  }
};